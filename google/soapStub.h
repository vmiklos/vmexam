/* soapStub.h
   Generated by gSOAP 2.7.6d from googleapi.h
   Copyright (C) 2000-2005, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/
#ifndef soapStub_H
#define soapStub_H
#include "stdsoap2.h"
#ifdef __cplusplus
extern "C" {
#endif

/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


#ifndef SOAP_TYPE__Enum_1
#define SOAP_TYPE__Enum_1 (7)
/* Enum-1 */
enum _Enum_1 {false_ = 0, true_ = 1};
#endif

/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#ifndef SOAP_TYPE_xsd__base64Binary
#define SOAP_TYPE_xsd__base64Binary (12)
/* Base64 schema type: */
struct xsd__base64Binary
{
	unsigned char *__ptr;
	int __size;
};
#endif

#ifndef SOAP_TYPE_api__DirectoryCategory
#define SOAP_TYPE_api__DirectoryCategory (16)
/* api:DirectoryCategory */
struct api__DirectoryCategory
{
	char *fullViewableName;	/* optional element of type xsd:string */
	char *specialEncoding;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_DirectoryCategoryArray
#define SOAP_TYPE_DirectoryCategoryArray (17)
/* SOAP encoded array of api:DirectoryCategory schema type: */
struct DirectoryCategoryArray
{
	struct api__DirectoryCategory *__ptr;
	int __size;
};
#endif

#ifndef SOAP_TYPE_api__ResultElement
#define SOAP_TYPE_api__ResultElement (19)
/* api:ResultElement */
struct api__ResultElement
{
	char *summary;	/* optional element of type xsd:string */
	char *URL;	/* optional element of type xsd:string */
	char *snippet;	/* optional element of type xsd:string */
	char *title;	/* optional element of type xsd:string */
	char *cachedSize;	/* optional element of type xsd:string */
	enum _Enum_1 relatedInformationPresent;	/* required element of type xsd:boolean */
	char *hostName;	/* optional element of type xsd:string */
	struct api__DirectoryCategory directoryCategory;	/* required element of type api:DirectoryCategory */
	char *directoryTitle;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ResultElementArray
#define SOAP_TYPE_ResultElementArray (20)
/* SOAP encoded array of api:ResultElement schema type: */
struct ResultElementArray
{
	struct api__ResultElement *__ptr;
	int __size;
};
#endif

#ifndef SOAP_TYPE_api__GoogleSearchResult
#define SOAP_TYPE_api__GoogleSearchResult (22)
/* api:GoogleSearchResult */
struct api__GoogleSearchResult
{
	enum _Enum_1 documentFiltering;	/* required element of type xsd:boolean */
	char *searchComments;	/* optional element of type xsd:string */
	int estimatedTotalResultsCount;	/* required element of type xsd:int */
	enum _Enum_1 estimateIsExact;	/* required element of type xsd:boolean */
	struct ResultElementArray resultElements;	/* required element of type ArrayOfResultElement */
	char *searchQuery;	/* optional element of type xsd:string */
	int startIndex;	/* required element of type xsd:int */
	int endIndex;	/* required element of type xsd:int */
	char *searchTips;	/* optional element of type xsd:string */
	struct DirectoryCategoryArray directoryCategories;	/* required element of type ArrayOfDirectoryCategory */
	double searchTime;	/* required element of type xsd:double */
};
#endif

#ifndef SOAP_TYPE_api__doGoogleSearchResponse
#define SOAP_TYPE_api__doGoogleSearchResponse (23)
/* api:doGoogleSearchResponse */
struct api__doGoogleSearchResponse
{
	struct api__GoogleSearchResult _return;	/* RPC return element */	/* required element of type api:GoogleSearchResult */
};
#endif

#ifndef SOAP_TYPE_api__doGoogleSearch
#define SOAP_TYPE_api__doGoogleSearch (26)
/* api:doGoogleSearch */
struct api__doGoogleSearch
{
	char *key;	/* optional element of type xsd:string */
	char *q;	/* optional element of type xsd:string */
	int start;	/* required element of type xsd:int */
	int maxResults;	/* required element of type xsd:int */
	enum _Enum_1 filter;	/* required element of type xsd:boolean */
	char *restrict_;	/* optional element of type xsd:string */
	enum _Enum_1 safeSearch;	/* required element of type xsd:boolean */
	char *lr;	/* optional element of type xsd:string */
	char *ie;	/* optional element of type xsd:string */
	char *oe;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_api__doGetCachedPageResponse
#define SOAP_TYPE_api__doGetCachedPageResponse (29)
/* api:doGetCachedPageResponse */
struct api__doGetCachedPageResponse
{
	struct xsd__base64Binary *_return;	/* RPC return element */	/* optional element of type xsd:base64Binary */
};
#endif

#ifndef SOAP_TYPE_api__doGetCachedPage
#define SOAP_TYPE_api__doGetCachedPage (30)
/* api:doGetCachedPage */
struct api__doGetCachedPage
{
	char *key;	/* optional element of type xsd:string */
	char *url;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_api__doSpellingSuggestionResponse
#define SOAP_TYPE_api__doSpellingSuggestionResponse (33)
/* api:doSpellingSuggestionResponse */
struct api__doSpellingSuggestionResponse
{
	char **_return;	/* RPC return element */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_api__doSpellingSuggestion
#define SOAP_TYPE_api__doSpellingSuggestion (34)
/* api:doSpellingSuggestion */
struct api__doSpellingSuggestion
{
	char *key;	/* optional element of type xsd:string */
	char *phrase;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (37)
/* SOAP Header: */
struct SOAP_ENV__Header
{
	void *dummy;	/* transient */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (38)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
	char *SOAP_ENV__Value;	/* optional element of type QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (40)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
	char *__any;
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (41)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (42)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
	char *faultcode;	/* optional element of type QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
};
#endif

/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (4)
typedef char *_XML;
#endif

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE_xsd__string
#define SOAP_TYPE_xsd__string (6)
typedef char *xsd__string;
#endif

#ifndef SOAP_TYPE_xsd__boolean
#define SOAP_TYPE_xsd__boolean (8)
typedef enum _Enum_1 xsd__boolean;
#endif

#ifndef SOAP_TYPE_xsd__int
#define SOAP_TYPE_xsd__int (9)
typedef int xsd__int;
#endif

#ifndef SOAP_TYPE_xsd__double
#define SOAP_TYPE_xsd__double (11)
typedef double xsd__double;
#endif


/******************************************************************************\
 *                                                                            *
 * Typedef Synonyms                                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operations                                                         *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 api__doGoogleSearch(struct soap*, char *key, char *q, int start, int maxResults, enum _Enum_1 filter, char *restrict_, enum _Enum_1 safeSearch, char *lr, char *ie, char *oe, struct api__doGoogleSearchResponse *response);

SOAP_FMAC5 int SOAP_FMAC6 api__doGetCachedPage(struct soap*, char *key, char *url, struct xsd__base64Binary *_return);

SOAP_FMAC5 int SOAP_FMAC6 api__doSpellingSuggestion(struct soap*, char *key, char *phrase, char **_return);

/******************************************************************************\
 *                                                                            *
 * Stubs                                                                      *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 soap_call_api__doGoogleSearch(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *key, char *q, int start, int maxResults, enum _Enum_1 filter, char *restrict_, enum _Enum_1 safeSearch, char *lr, char *ie, char *oe, struct api__doGoogleSearchResponse *response);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_api__doGetCachedPage(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *key, char *url, struct xsd__base64Binary *_return);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_api__doSpellingSuggestion(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *key, char *phrase, char **_return);

/******************************************************************************\
 *                                                                            *
 * Skeletons                                                                  *
 *                                                                            *
\******************************************************************************/

SOAP_FMAC5 int SOAP_FMAC6 soap_serve(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_request(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_api__doGoogleSearch(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_api__doGetCachedPage(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_api__doSpellingSuggestion(struct soap*);

#ifdef __cplusplus
}
#endif

#endif

/* End of soapStub.h */
