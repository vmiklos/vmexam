#!/usr/bin/env python3
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
#
# Takes an OSM way ID and turns it into a string that is readable and
# e.g. OsmAnd can parse it as well.
#

import json
import sys
import urllib.parse
import urllib.request


def queryTurbo(query):
    url = "http://overpass-api.de/api/interpreter"

    sock = urllib.request.urlopen(url, bytes(query, "utf-8"))
    buf = sock.read()
    sock.close()

    return buf.decode("utf-8")


def queryNominatim(city, street, housenumber):
    url = "http://nominatim.openstreetmap.org/search.php?"
    d = {
        "q": "%s %s, %s" % (housenumber, street, city),
        "format": "json"
    }
    url += urllib.parse.urlencode(d)

    sock = urllib.request.urlopen(url)
    buf = sock.read()
    sock.close()

    return buf.decode("utf-8")


def osmify(url):
    tokens = url.split('/')
    # E.g. node or way.
    objectType = tokens[-2]
    # Numeric ID.
    objectId = tokens[-1]

    # Turn the ID into an address.
    query = """[out:json];
(
    %s(%s);
);
out body;""" % (objectType, objectId)

    j = json.loads(queryTurbo(query))
    element = j['elements'][0]
    city = element['tags']['addr:city']
    housenumber = element['tags']['addr:housenumber']
    postcode = element['tags']['addr:postcode']
    street = element['tags']['addr:street']
    addr = "%s %s, %s %s" % (postcode, city, street, housenumber)

    # Have the address, now talk to nominatim to get the coordinates as well.
    j = json.loads(queryNominatim(city, street, housenumber))
    element = j[0]
    lat = element["lat"]
    lon = element["lon"]

    # Print the result.
    print("%s,%s (%s)" % (lat, lon, addr))

if len(sys.argv) > 1:
    osmify(sys.argv[1])
else:
    print("usage: addr-osmify <url>")
    print()
    print("e.g. addr-osmify http://www.openstreetmap.org/node/2700453924")

# vim:set shiftwidth=4 softtabstop=4 expandtab:
