#!/usr/bin/env python3
#
# Copyright 2019 Miklos Vajna. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.
#
# Goes through your Google contacts XML and finds addresses which don't start
# with 'geo:', assuming that data does not come from OSM.
#

import os
import json


class GContacts(object):
    def __init__(self):
        configPath = os.path.expanduser("~/.google-contacts")
        self.contactsJsonPath = os.path.join(configPath, "contacts.json")

    def check(self):
        def getName(contact):
            for name in contact["names"]:
                if "displayName" in name.keys():
                    return name["displayName"]

        def getAddress(contact):
            addresses = []
            if "addresses" not in contact.keys():
                return addresses

            for address in contact["addresses"]:
                if "formattedValue" in address.keys():
                    addresses.append(address["formattedValue"])
            return addresses

        if not os.path.exists(self.contactsJsonPath):
            return
        contacts = json.load(open(self.contactsJsonPath))
        matches = []
        for contact in contacts:
            name = getName(contact)
            addresses = getAddress(contact)
            if not len(addresses):
                continue

            address = addresses[0]
            if address.startswith("geo:"):
                # This is the whole point of this script.
                continue
            matches.append("%s: %s" % (name, address))
        matches = sorted(set(matches))
        for i in matches:
            print(i)


def main():
    contacts = GContacts()
    contacts.check()


if __name__ == "__main__":
    main()

# vim:set shiftwidth=4 softtabstop=4 expandtab:
