= Clang libtooling-based rename

== This tool vs clang-rename

This tool is similar to clang-rename, though there are a number of differences.

Pros:

- old name can be a simple qualified name, no need to manually specify a byte
  offset
- rename handles ctor initializer list, too
- comes with a wrapper to do fully automatic rewriting

Cons:

- handles only rename of class members so far
- only tested with clang-3.5.0

== Hello world

Example usage:

----
bin/rename -old-name=C::nX -new-name=m_nX test.cxx --
----

If you get missing includes:

----
ln -s /usr/lib64
----

== Build system integration

LibreOffice integration example (provided that rename-wrapper is in your PATH):

----
make -sr -j8 COMPILER_EXTERNAL_TOOL=1 FORCE_COMPILE_ALL=1 CCACHE_PREFIX=rename-wrapper RENAME_ARGS="-old-name=writerfilter::rtftok::RTFValue::m_sValue -new-name=m_aValue"
----

Once the rewriting is done, you can overwrite the original files with the .new ones with:

----
for i in $(find . -name "*.new"); do mv -f $i ${i%%.new}; done
----

// vim: ft=asciidoc
