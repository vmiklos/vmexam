//========================================================
// Hazi feladat keret.
// A //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// sorokon beluli reszben celszeru garazdalkodni, mert
// a tobbit ugyis toroljuk.
// A Hazi feladat csak ebben a fajlban lehet
// Tilos:
// - mast "beincludolni", illetve mas konyvtarat hasznalni
// - faljmuveleteket vegezni
//========================================================

#include <math.h>
#include <stdlib.h>

#if defined(WIN32) || defined(_WIN32) || defined(__WIN32__)
// MsWindows-on ez is kell
#include <windows.h>
#endif // Win32 platform

#include <GL/gl.h>
#include <GL/glu.h>
// A GLUT-ot le kell tolteni: http://www.opengl.org/resources/libraries/glut/
#include <GL/glut.h>

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// Innentol modosithatod...

//--------------------------------------------------------
// Nev: Vajna Miklos
// Neptun: AYU9RZ
//--------------------------------------------------------

#include <stdio.h>
float zoom = 3;

// gimpbol exportalva
unsigned char	 pixel_data[] = {
  "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\24\0\0a\0\0f\0\0f\0\0f\0\0f\0\0f\0"
  "\0f\0\0f\0\0f\0\0f\0\0\20\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
  "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
  "\0\0""7\0\0f\0\0f\0\0f\0\0f\0\0f\0\0f\0\0f\0\0f\0\0f\0\0f\0\0\31\0\0\0\0"
  "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
  "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\12\0\0[\0\0h\0\0g\0\0f\0\0f\0\0f\0"
  "\0f\0\0f\0\0f\0\0f\0\0f\0\0\31\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
  "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
  "\0\0#\0\0{\0\0\202\0\0\202\0\0\202\0\0\202\0\0\200\0\0\200\0\0|\0\0|\0\0"
  "z\0\0{\0\0%\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
  "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\5\0\0Q\0\0\201\0\0\202"
  "\0\0\202\0\0\202\0\0\202\0\0\202\0\0\202\0\0\202\0\0\202\0\0\202\0\0\202"
  "\0\0\"\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
  "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\12\0\0n\0\0\202\0\0\202\0"
  "\0\202\0\0\202\0\0\202\0\0\202\0\0\202\0\0\202\0\0\202\0\0\202\0\0\202\0"
  "\0""2\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
  "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\36\0\0\177\0\0\202\0\0\202\0"
  "\0\202\0\0\202\0\0\202\0\0\202\0\0\202\0\0\202\0\0\202\0\0\202\0\0\202\0"
  "\0;\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
  "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\33\0\0\202\0\0\202\0\0\202\0\0"
  "\202\0\0\202\0\0\202\0\0\202\0\0\202\0\0\202\0\0\202\0\0\202\0\0\202\0\0"
  "a\0\0\17\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
  "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\31\0\0\202\0\0\202\0\0\202\0\0"
  "\202\0\0\202\0\0\202\0\0\202\0\0\202\0\0\202\0\0\202\0\0\202\0\0\202\0\0"
  "r\0\0\33\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
  "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\2\0\0h\0\0\202\0\0\202\0\0\202"
  "\0\0\202\0\0\202\0\0\202\0\0\202\0\0\202\0\0\202\0\0\202\0\0\202\0\0\202"
  "\0\0X\0\0\10\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
  "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0""6\0\0\202\0\0\202\0\0\202"
  "\0\0\202\0\0\202\0\0\202\0\0\202\0\0\202\0\0\202\0\0\202\0\0\202\0\0\202"
  "\0\0u\0\0\24\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
  "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0a\0\0\202\0\0\202\0\0"
  "\202\0\0\202\0\0\202\0\0\202\0\0\202\0\0\202\0\0\202\0\0\202\0\0\202\0\0"
  "\202\0\0(\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
  "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0""0\0\0\202\0\0\202\0\0\202"
  "\0\0\202\0\0\202\0\0\202\0\0\202\0\0\202\0\0\202\0\0\202\0\0\202\0\0\202"
  "\0\0\40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
  "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0a\0\0\202\0\0\202\0\0"
  "\202\0\0\202\0\0\202\0\0\202\0\0\202\0\0\202\0\0\202\0\0\202\0\0\202\0\0"
  "'\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
  "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0,\0\0g\0\0i\0\0n\0\0q\0\0w"
  "\0\0x\0\0{\0\0z\0\0{\0\0z\0\0{\0\0\35\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
  "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
  "\0\0\0\0\0\0\0\0W\0\0f\0\0f\0\0f\0\0f\0\0f\0\0f\0\0f\0\0f\0\0f\0\0f\0\0\37"
  "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
  "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0'\0\0[\0\0f\0\0f\0\0"
  "f\0\0f\0\0f\0\0f\0\0f\0\0g\0\0j\0\0\35\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
  "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
  "\0\0\0\0\0\0\0\0\0\0\0\0""1\0\0p\0\0\207\0\0\212\0\0\223\0\0\224\0\0\236"
  "\0\0\240\0\0\240\0\0\240\0\0.\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
  "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
  "\0\0\0\0\0\0\0\12\0\0]\0\0\226\0\0\240\0\0\240\0\0\240\0\0\240\0\0\240\0"
  "\0\240\0\0\240\0\0+\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
  "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
  "\0\0\0\0\0\37\0\0z\0\0\240\0\0\240\0\0\240\0\0\240\0\0\240\0\0\240\0\0\240"
  "\0\0""1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
  "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\4"
  "\0\0>\0\0\226\0\0\240\0\0\240\0\0\240\0\0\240\0\0\240\0\0\240\0\0A\0\0\0"
  "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
  "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\30\0\0\202"
  "\0\0\240\0\0\240\0\0\240\0\0\240\0\0\240\0\0\240\0\0]\0\0\6\0\0\0\0\0\0\0"
  "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
  "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0]\0\0\240\0\0\240"
  "\0\0\240\0\0\240\0\0\240\0\0\240\0\0\202\0\0\24\0\0\0\0\0\0\0\0\0\0\0\0\0"
  "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
  "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0A\0\0\240\0\0\240\0\0\240\0\0"
  "\240\0\0\240\0\0\240\0\0\226\0\0""8\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
  "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
  "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0""1\0\0\240\0\0\240\0\0\240\0\0\240\0\0\240"
  "\0\0\240\0\0\240\0\0f\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
  "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
  "\0\0\0\0\0\0\0\0\0+\0\0\240\0\0\240\0\0\240\0\0\240\0\0\240\0\0\240\0\0\240"
  "\0\0\206\0\0\13\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
  "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
  "\0\0\0.\0\0\240\0\0\240\0\0\240\0\0\240\0\0\240\0\0\240\0\0\240\0\0\224\0"
  "\0\40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
  "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0)\0\0"
  "\240\0\0\240\0\0\240\0\0\240\0\0\240\0\0\240\0\0\240\0\0\232\0\0E\0\0\0\0"
  "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
  "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0-\0\0\222\0\0\212"
  "\0\0\206\0\0u\0\0m\0\0f\0\0f\0\0f\0\0D\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
  "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
  "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\30\0\0f\0\0f\0\0f\0\0f\0\0f\0\0f\0\0f\0\0"
  "f\0\0Y\0\0\14\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
  "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\36"
  "\0\0f\0\0f\0\0f\0\0f\0\0f\0\0f\0\0f\0\0f\0\0`\0\0\34\0\0\0\0\0\0\0\0\0\0"
  "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
  "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\30\0\0f\0\0f\0\0f\0\0f\0\0f\0\0f\0"
  "\0f\0\0f\0\0f\0\0""9\0\0\6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
  "\0\0",
};

unsigned int texture;
void onInitialization( ) {
	//float al[] = {0.1, 0.1, 0.1, 1.0};
	//float dl[] = {0.5, 0.2, 0.3, 1.0};
	glMatrixMode(GL_PROJECTION);
	gluPerspective(90, -1.0, 1.0 ,100.0);
	glMatrixMode(GL_MODELVIEW);
	gluLookAt(0, 2, 5,0,0,-10,0,1,0);
	glEnable(GL_LIGHTING);
	//glLightfv(GL_LIGHT0,GL_AMBIENT,al);
	//glLightfv(GL_LIGHT0,GL_DIFFUSE,dl);
	// glLightfv(GL_LIGHT0,GL_SPECULAR,sl);
	// glLightfv(GL_LIGHT0,GL_POSITION,pos);
	glEnable(GL_LIGHT0);
	glEnable(GL_DEPTH_TEST);
	glShadeModel(GL_SMOOTH);
	glGenTextures(1, &texture);
	glBindTexture (GL_TEXTURE_2D, texture);
	glPixelStorei (GL_UNPACK_ALIGNMENT, 1);
	glTexParameteri (GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT);
	glTexParameteri (GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT);
	glTexParameteri (GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR);
	glTexParameteri (GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR);
	glTexEnvf (GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_MODULATE);
	glTexImage2D (GL_TEXTURE_2D, 0, GL_RGB, 32, 32, 0, GL_RGB, GL_UNSIGNED_BYTE, pixel_data);
}

void onDisplay( ) {
	glClearColor(0.5f, 0.5f, 1.0f, 1.0f);
	//glClearColor(0.1f, 0.2f, 0.3f, 1.0f);
	glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);

	/*glColor3f(1.0f, 1.0f, 1.0f);
	glBegin(GL_LINES);
	for (int i = -3; i < 3; i++) {
		for (int j = -3; j <= 3; j++) {
			glVertex3f(i*zoom, 0, j*zoom);
			glVertex3f((i+1)*zoom, 0, j*zoom);
		}
	}
	for (int i = -3; i < 3; i++) {
		for (int j = -3; j <= 3; j++) {
			glVertex3f(j*zoom, 0, i*zoom);
			glVertex3f(j*zoom, 0, (i+1)*zoom);
		}
	}
	glEnd();*/
	// terep
	glEnable (GL_TEXTURE_2D);
	glBindTexture (GL_TEXTURE_2D, texture);
	//float green[] = {0.0, 1.0, 0.0, 1.0};
	glBegin(GL_QUADS);
	//glMaterialfv(GL_FRONT, GL_DIFFUSE, green);
	glTexCoord2f (0.0f,0.0f);
	glVertex3f(-3*zoom, 0, -1*zoom);
	glTexCoord2f (1.0f, 0.0f);
	glVertex3f(-3*zoom, 0, 2*zoom);
	glTexCoord2f (1.0f, 1.0f);
	glVertex3f(3*zoom, 0, 2*zoom);
	glTexCoord2f (0.0f, 1.0f);
	glVertex3f(3*zoom, 0, -1*zoom);
	glEnd();
	glDisable (GL_TEXTURE_2D);
	// ut
	glBegin(GL_QUADS);
	float gray[] = {0.5, 0.5, 0.5, 1.0};
	glMaterialfv(GL_FRONT, GL_DIFFUSE, gray);
	glVertex3f(-3*zoom, 0, 0);
	glVertex3f(-3*zoom, 0, 1*zoom);
	glVertex3f(3*zoom, 0, 1*zoom);
	glVertex3f(3*zoom, 0, 0);
	glEnd();

	// Buffercsere: rajzolas vege
	glFinish();
	glutSwapBuffers();
}

void onMouse(int button, int state, int x, int y) {
	// A GLUT_LEFT_BUTTON / GLUT_RIGHT_BUTTON
	// ill. a GLUT_DOWN / GLUT_UP makrokat hasznald.
}

void onIdle( ) {
}

void onKeyboard(unsigned char key, int x, int y) {
}

// ...Idaig modosithatod
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

int main(int argc, char **argv) {
	glutInit(&argc, argv);
	glutInitWindowSize(600, 600);
	glutInitWindowPosition(100, 100);
	glutInitDisplayMode(GLUT_RGB | GLUT_DOUBLE | GLUT_DEPTH);

	glutCreateWindow("Grafika hazi feladat");

	glMatrixMode(GL_MODELVIEW);
	glLoadIdentity();
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();

	onInitialization();

	glutDisplayFunc(onDisplay);
	glutMouseFunc(onMouse);
	glutIdleFunc(onIdle);
	glutKeyboardFunc(onKeyboard);

	glutMainLoop();

	return 0;
}
