#!/usr/bin/env python3
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
#
# Dumb script which just tries to uncomment each include to see if it causes a
# build failure.
#

import sys
import os
import includetools


def comment_line(lines, linenum):
    lines[linenum] = "//%s" % lines[linenum]
    with open(srcfile, "w") as sock:
        sock.write("".join(lines))
    return lines


def uncomment_line(lines, linenum):
    assert lines[linenum][:2] == "//"
    lines[linenum] = lines[linenum][2:]
    with open(srcfile, "w") as sock:
        sock.write("".join(lines))
    return lines

try:
    buildcmd = sys.argv[1]
except IndexError:
    print("""Example: find-unneeded-includes 'make -sr build -j8' source/filter/ww8/rtfsdrexport.cxx""")
    # More complex example would be:
    # 'for i in $(grep cxx$ .git/indented-files.cache|grep -v qa); do ~/git/vmexam/libreoffice/find-unneeded-includes "make $(echo $i|sed 's|\([^/]\+\)/.*|\1|').build" $i; done'
    sys.exit(1)
srcfile = sys.argv[2]

sock = open(srcfile)
lines = sock.readlines()
sock.close()

for i, line in enumerate(lines):
    if not line.startswith("#include"):
        continue
    what = line.strip().replace("#include ", "")
    if (what in includetools.stdCppHeaders) or (includetools.isOwnHeader(what, srcfile)):
        continue
    lines = comment_line(lines, i)
    if os.system(buildcmd) != 0:
        lines = uncomment_line(lines, i)

# vim:set shiftwidth=4 softtabstop=4 expandtab:
