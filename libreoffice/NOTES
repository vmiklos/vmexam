= LO hacking notes

== 2011-12-22

- cmdline to incrementally rebuild with debug:

----
make -sr dbglevel=2 -j4
----

- cmdline to get SAL_INFO / SAL_WARN output:

----
SAL_LOG=+INFO.writerfilter+WARN.writerfilter ./soffice.bin --nologo /home/vmiklos/git/libreoffice/lo-test-files/writer/bugs/fdo40937/Crashing.rtf 2>&1 |tee out
----

== 2011-12-28

typical konsole tabs:

- doc
- build
- hack
- run
- test
- push

onegit master build with empty ccache but ccache enabled on my t520:

----
real    93m35.371s
----

with full ccache:

----
real    26m24.653s
----

== 2012-01-01

Export filter -> exporter calls:

- doc: SwWW8Writer::WriteStorage
- docx: DocxExportFilter::exportDocument
- rtf: RtfExportFilter::filter

== 2012-01-11

Localized string howto: add the string to src/hrc, then:

----
#include <tools/resmgr.hxx>
#include <vcl/svapp.hxx>
... include of the hrc ...

static ResMgr* pResMgr = ResMgr::CreateResMgr("module", Application::GetSettings().GetUILocale());
OUString sFooBar(ResId::toString(ResId(RID_MODULESTR_FOO_BAR, *pResMgr)));
----

== 2011-02-04

bibisect:

SAL_USE_VCLPLUGIN="gen" opt/program/soffice.bin

good: 65fd30f5cb4cdd37995a33420ed8273c0a29bf00
bad: 4c30602f43475389f81b1d981ce8ee9a3410b9d9

-> d5f5b9bb5dc47417fcd9cc494b8d2dcd4a7c620e first bad -> a57304a53832adf0c8a32b0c53d9be5b55507ab1 in core.git
-> d0ae9578f865b45dd01b822d5d6be45b5872f842 last good -> 97453f1eabb473d0691e41153eff2ac92e88a302 in core.git

== 2011-03-28

To run a single unit test in gdb:

----
GDBCPPUNITTRACE="gdb --args" make -sr /home/vmiklos/git/libreoffice/master/workdir/unxlngx6/CppunitTest/sw_ooxmlimport.test
----

== 2011-03-29

Installing all build-deps on openSUSE 12.2:

----
zypper si -d libreoffice
zypper in git doxygen ctags krb5-devel java-1_7_0-openjdk-devel
----

== 2011-04-03

Magic line to load http://bernard.marcelly.perso.sfr.fr/index2.html[xray] when it's already installed:

----
GlobalScope.BasicLibraries.LoadLibrary("XrayTool")
----

== 2011-04-04

- samples to insert set / get fields:

----
Sub insertSetField()
oDoc = ThisComponent 
oMasters = oDoc.TextFieldMasters
sMasterFieldName = "com.sun.star.text.FieldMaster.SetExpression.foo"
if oMasters.hasByName(sMasterFieldName) then
    oMaster = oMasters.getByName(sMasterFieldName)
else
    oMaster = oDoc.createInstance("com.sun.star.text.FieldMaster.SetExpression")
    oMaster.Name = "foo"
    oMaster.SubType = 3
end if
oField = oDoc.createInstance("com.sun.star.text.TextField.SetExpression") 
oField.Content = "bar"
oField.attachTextFieldMaster(oMaster)
oField.SubType = 3
oField.IsVisible = False
oText = oDoc.Text 
oCurs = oDoc.getCurrentController().getViewCursor()
oText.insertTextContent(oCurs, oField, False) 
End Sub

Sub insertGetField()
oDoc = ThisComponent 
oField = oDoc.createInstance("com.sun.star.text.TextField.GetExpression") 
oField.Content = "foo"
oField.SubType = 3
oText = oDoc.Text 
oCurs = oDoc.getCurrentController().getViewCursor()
oText.insertTextContent(oCurs, oField, False) 
End Sub
----

== 2012-05-05

Experimenting with gdb pretty-printers:

To run once:

----
gdb --args ./soffice.bin --nologo /home/vmiklos/git/libreoffice/master/sw/qa/extras/ooxmltok/data/n751017.docx
b DomainMapper_Impl.cxx:3093
print xFieldProperties
----

To reload without restart:

----
python import libreoffice.cppu
python p = libreoffice.cppu.BeansXPropertySetPrinter("com::sun::star::beans::XPropertySet", gdb.parse_and_eval("*xFieldProperties.get()")); print p.to_string()
python reload(libreoffice.cppu)
----

The XPropretySet pretty-printer is blocked by this: http://sourceware.org/bugzilla/show_bug.cgi?id=13326

== 2012-06-25

How to trigger SwXTextDefaults::supportsService() from basic:

----
o = ThisComponent.createInstance("com.sun.star.text.Defaults")
xray o.supportsService("com.sun.star.style.CharacterProperties")
----

== 2012-07-21

Simple Calc macro:

----
' Does the following transformation:
' A1: 11, B1: 11, A2: 11, B2: 11 -> A1: 11, B1: 12, A2: 13, B2: 14
' Works if starting point is not A1, or prefix is not "1"
contents = ThisComponent.CurrentSelection.String
contents = left(contents, len(contents)-1)
document   = ThisComponent.CurrentController.Frame
dispatcher = createUnoService("com.sun.star.frame.DispatchHelper")
dim args(0) as new com.sun.star.beans.PropertyValue
dispatcher.executeDispatch(document, ".uno:GoRight", "", 0, args())
ThisComponent.CurrentSelection.String = contents & "2"
dispatcher.executeDispatch(document, ".uno:GoLeft", "", 0, args())
dispatcher.executeDispatch(document, ".uno:GoDown", "", 0, args())
ThisComponent.CurrentSelection.String = contents & "3"
dispatcher.executeDispatch(document, ".uno:GoRight", "", 0, args())
ThisComponent.CurrentSelection.String = contents & "4"
dispatcher.executeDispatch(document, ".uno:GoLeft", "", 0, args())
dispatcher.executeDispatch(document, ".uno:GoUp", "", 0, args())
----

== 2012-11-23

- learned today:
  - single line spacing: 15%
  - utf8 can store more than utf16

== 2012-11-24:

- gdb tricks
  - "command" command
  - dmapper: print m_pImpl->m_xBodyText._pInterface->m_pImpl->m_pDoc->GetNodes()
  - rtftok: print m_rImport->m_pMapperStream->m_pImpl->m_xBodyText._pInterface->m_pImpl->m_pDoc->GetNodes()
  - rtf filter: print (*pStream)->m_pImpl->m_xBodyText._pInterface->m_pImpl->m_pDoc->GetNodes()
  - text range: print xTextRange._pInterface->m_pImpl->m_pMark->m_pPos1
  - cursors: print print *m_aTextAppendStack.top().xCursor._pInterface->m_pImpl->GetRegisteredIn()
  - soffice.bin: /home/vmiklos/git/libreoffice/master/sw/source/core/bastyp/index.cxx:236: virtual SwIndexReg::~SwIndexReg(): Assertion !m_pFirst && !m_pLast failed.

set logging on
b /home/vmiklos/git/libreoffice/master/sw/source/core/bastyp/index.cxx:34
b /home/vmiklos/git/libreoffice/master/sw/source/core/bastyp/index.cxx:43
b /home/vmiklos/git/libreoffice/master/sw/source/core/bastyp/index.cxx:53
command 1 2 3
print this
bt 5
c
end
set pagination off
r
frame 4
print m_pFirst
print m_pLast

- rtf speedup:

before:
./soffice.bin --nologo /home/vmiklos/git/libreoffice/lo-test-files/writer/bugs/fdo44736/lorem421pages_format_parag_and_text.rtf
debug, finished in 20686 ms

after:
debug, finished in 12021 ms

== 2012-11-25

- icecream client thing:

zypper -p http://download.opensuse.org/repositories/home:/llunak:/clang/openSUSE_12.2/ in icecream-0.9.7-64.1s.x86_64 # to be fair with others, and be a server as well
http://en.opensuse.org/Icecream#Firewall
CCACHE_PREFIX="icecc" make -sr -j30

- mso-dumper: Word can't open comment.rtf's cleaned up version, but Writer can ;)

== 2012-12-24

- fdo#57678: test.rtf.wordbug - next Word bug..

== 2013-02-18

- converting to Microsoft-style docx: ./soffice.bin --headless --convert-to docx:'MS Word 2007 XML'
- converting to odt: ./soffice.bin --headless --convert-to odt:writer8

== 2013-04-02

How to detect missing includes:

- GCC: use

----
make CPPFLAGS="-Wundef"
----

in a partial build.

- MSVC: insert

----
#pragma warning (default : 4668)
----

at the top of the file and recompile.

== 2013-06-27

Android notes:

- to run the emulator:

----
~/git/libreoffice/android/android-sdk-linux/tools$ LD_LIBRARY_PATH=$(pwd)/lib ./emulator-arm -avd myavd-lo -partition-size 500
----

- upload pkg:

----
~/git/libreoffice/android/android-sdk-linux/platform-tools/adb install master~2013-06-27_00.05.44_LibreOffice4Android-debug.apk
----

- current master seems to be broken at runtime, let's try with `master~2013-02-28_07.22.59_LibreOffice4Android-debug.apk` -> works!

- built e440724eb7febe0072d79683d1a6f3b586575a3f -> also works!

== 2013-07-14

- rendered page size in px:

----
I/DocumentLoader(  808): debug, width is 480, height is 762
----

- enable sdk controller:

----
~/git/libreoffice/android/android-sdk-linux/platform-tools/adb forward tcp:1970 localabstract:android.sdk.controller
----

== 2013-12-27

\clmgf is: cell merge group first
\clmrg: is cell merge resume group

API to merge cells:

oCursor = ThisComponent.TextTables(0).createCursorByCellName("A1")
oCursor.gotoCellByName("B1", True)
oCursor.mergeRange()

From position to cell name:
ThisComponent.TextTables(0).getCellByPosition(0, 0).CellName

== 2013-12-29

fdo#41109

dhgt: small -> further back
shpz: 0 -> back, N -> top

if they are conflicting, shpz has priority

== 2014-02-07

How to get only the stdout of a unit test:

----
make CppunitTest_sw_ooxmlexport gb_CppunitTest__interactive=t 2>/dev/null |tee out
grep -v File out > out2
sort -t ',' -nk 2 out2
----

== 2014-05-16

Update indented-files.txt for style-check-files:

----
~/git/vmexam/bash/git-ls-creators |tee creators-new.csv
mv creators-new.csv creators.csv
egrep "(cxx|hxx|py);.*$USER" creators.csv |sed 's/;.*//' > ~/indented-files-new
git diff --no-index indented-files.txt indended-files-new | grep ^+[^+] | grep -v sw/qa
----

== 2014-08-02

Detecting unused imports and variables with pylint:

----
for i in *.py; do pylint -r n $i; done > out
----

and then search for 'used'.

== 2014-10-04

How ODF import decides between editeng and a Writer TextFrame:

xmloff/source/text/XMLTextFrameContext.cxx, XMLTextFrameContext::XMLTextFrameContext()

== 2015-04-24

Clang AST dump:

clang++ -Xclang -ast-dump -fsyntax-only test.cc

https://kevinaboos.wordpress.com/2013/07/23/clang-tutorial-part-ii-libtooling-example/

== 2015-10-16

https://bugs.documentfoundation.org/show_bug.cgi?id=94374

Steps to reproduce on master, e.g.:

1) Create a hello-world docx file using Word.

2) Insert -> Object -> Document

3) Read error

== 2015-10-22

https://bugs.documentfoundation.org/show_bug.cgi?id=59454

RTF import: if section break is right before a table, it gets ignored.

DOCX import doesn't seem to be affected.

In writerfilter::dmapper::SectionPropertyMap::SetStart(), m_xStartingRange points to node #9, then node #10.

in docx, SectionPropertyMap::CloseSectionGroup start has the same values
in rtf, the second SectionPropertyMap::CloseSectionGroup has m_xStartingRange pointing to #18

2e8aad6d45c53d554ccaf26de998ede708cfc289 fixes a similar problem for docx

yes, 'ase NS_ooxml::LN_tblStart' of DomainMapper::sprmWithProps() is what makes docx work

so rtftok has to know where a table starts/ends -- could work it around with
start/end a table in RTF_ROW, but sounds ugly.

better approach seems to be to keep an eye on m_nCellxMax when it does a 0 -> n
or n -> 0 transition -> fixed.

== 2015-10-30

https://bugs.documentfoundation.org/show_bug.cgi?id=89088

last page is missing, gdb catch throw points out
ShapeContextHandler::endFastElement in
oox/source/shape/ShapeContextHandler.cxx, using >>= there fixes the bug.

https://gerrit.libreoffice.org/#/c/19676/

without patch: mem usage of android ODT after load according to top (RES): 254500, after typing 30 "8": 288168
with patch:                                                                257008, after typing 30 "8": 258064

== 2015-11-06

https://bugs.documentfoundation.org/show_bug.cgi?id=85232 -- a vml->dml regression wrt groupshape handling

- git:

related vml commit: 7877638814de86202d33b5653a0f91d63341e98c

- code:

related VML code: oox::vml::ShapeBase::convertAndInsert
related DML code: oox::drawingml::Shape::createAndInsert

- DML import works by setting the transformation matrix once, methods to tweak it:

basegfx::B2DHomMatrix::decompose to decompose
basegfx::tools::createScaleShearXRotateTranslateB2DHomMatrix to compose

- aha, root cause is missing mm100 -> twips conversion

== 2015-11-13

https://bugs.documentfoundation.org/show_bug.cgi?id=83300

a 4.1 -> 4.2 regression

== 2015-11-20

https://bugs.documentfoundation.org/show_bug.cgi?id=78902

a 4.2 -> 4.3 regression

created minimized test document: 2,2M -> 30K

bibisect-43all, last42onmaster is good, last43onmaster is bad (layout does not finish in about 10 sec)
- [4fcd68ce4979f85fda4568f4b419a4b41d07345f] source-hash-2c4621c87ed3a7b19de195c21494c9a381e72b2e is good
- [422186458e0b4db00c7e26b54d5b631f83bcad2a] source-hash-6948bf58ce181b17f60ef81f10205ef4dac50cc6 is skip
- [a0b33bffff9c787dce71a13b344f06ae1453026b] source-hash-02e0be069e57e724c51f23e2e31b77657a6a1d3d is bad
- [db29eee512d03b1dc0139b3752bbe7931b165377] source-hash-77b6c1602aaa0bd059077765e7fabb53d9e6ddeb is bad (hangs hard)
- [0b79394752f7ecbab6ab4ecedbfab8551c6e9fbd] source-hash-381613916d42a1e18e2824b5d41028dcfe19659a is bad
- [7c18060e3625d89e7ca6c3a75b0f609200150252] source-hash-2589d9e3e6e9fab18ff735561991a3dcdd3d8b4b is good
- [2f040759edbb7bb8e7a41cf06bac2a2a0fb50c73] source-hash-76fe205d7e0fe0a73616453209d8094cab9ce79f is good
- [a03a074d7d24b285022244e1939b1abbedc76d1e] source-hash-c84f0dae40b6f3e64a265efcc76b1757edbdbf45 is bad
- [56a3b3c781fc2eb55f46641d89a866a91119a8a3] source-hash-21e6fd2b2dfdb806db320f699e434e6f2351a7b6 is bad

56a3b3c781fc2eb55f46641d89a866a91119a8a3 / source-hash-21e6fd2b2dfdb806db320f699e434e6f2351a7b6 is the first bad
2f040759edbb7bb8e7a41cf06bac2a2a0fb50c73 / source-hash-76fe205d7e0fe0a73616453209d8094cab9ce79f is still good

nominally a regression from 2b78f2cd7b9e4bab0f3b3b9119238f36a1bbc7b2 (but obviously just made a previous problem visible)

idea: hack SwFrm::InsertPage() so that layout finishes (disable sw page frame deletions), then compare the ww8 and ooxml import results

binary doc import seems to create an sw image, while ooxml+vml import creates a draw image

== 2015-11-27

https://bugs.documentfoundation.org/show_bug.cgi?id=95865

4b918705f67d0837b56e56d7abac23e6eb21feb4 is supposed to be good -> indeed
41379970e8c6b75563b7c162b4e760b9e93a5bea is suppoesd to be bad -> indeed
bd2455d310b35d6e231627c1a89301450be0c65d is good
bf35ea1dea48cfc5617e116c1f638f787f349855 is bad
910c31ab55a90c87e9e16ded734fec396660e331 is bad
6adfbe62f6bb67d7d78c1561e9af5169d7f5bb9a is bad
5f87aafea491b111fa1d7518c746e0e1304a069a is good
147b74beea7b5f0fb121e5495bbdfb4869786603 is good
98785dbb95eca5443b38535cba6552e21d4e2c5b is good -> bisected

https://bugs.documentfoundation.org/show_bug.cgi?id=94043

ww8 import result:

SeparatorLineColor        long                          0   
SeparatorLineIsOn         boolean                    True   
SeparatorLineRelativeHeight long                      100   
SeparatorLineStyle        byte                          0   
SeparatorLineVerticalAlignment integer                  0   
SeparatorLineWidth        long                          2  

docx import result: SeparatorLineWidth is 0

testcase:
ThisComponent.TextSections.Section1.TextColumns.SeparatorLineWidth

=== 2015-12-04

https://bugs.documentfoundation.org/show_bug.cgi?id=94377

RtfAttributeOutput::PostitField just writes plain text
DocxAttributeOutput::WritePostitFields seems to do better

=== 2015-12-11

https://bugs.documentfoundation.org/show_bug.cgi?id=96113

Similar fix: 79fb61efb847405fa47235002b52ee8efad5e339

testcase: ThisComponent.DrawPage(0).BackColor should be 0x00FF00

=== 2015-12-18

https://bugs.documentfoundation.org/show_bug.cgi?id=93009

025952f52767fb3508a6725468fe4b1e6ce4c9b1 is supposed to be good: indeed
a6f5770b4aaaa6506a22eae0d641ad48f9b6d239 is supposed to be bad: indeed
cfde943f59b0cf63c46cbe061fd37e53201d2363 is bad
978033d5ed9f93f2d5d9a1ba44acf6b37bc13bfe is bad
f1256611054701a2bba20225fb654814eecbf559 is good
b5a4e6974a5473c44fc239b6a9ae21f233111c2a is good

978033d5ed9f93f2d5d9a1ba44acf6b37bc13bfe is the problem

=== 2015-12-22

https://bugs.documentfoundation.org/show_bug.cgi?id=96674

VML import has similar tweaks in ShapeType::getAbsRectangle() and
ShapeType::getRelRectangle().

=== 2015-12-29

https://bugs.documentfoundation.org/show_bug.cgi?id=95213

testcase:

oParas = ThisComponent.Text.createEnumeration
oPara = oParas.nextElement
oPara = oParas.nextElement
xray oPara.NumberingRules.getByIndex(1) ' ListLabel 4 and ListLabel 5 for CharStyleName

=== 2015-12-30

https://bugs.documentfoundation.org/show_bug.cgi?id=96308

probably a regression from b9c1a9b9aa41dbbb6bed0c77f4370ab6105c7fb1

two problems: incorrect tab stop + tab stop is not deleted

def tab stop should be 0.5cm, is 1.27cm

tab stop not deleted: sort of already handled in writerfilter::dmapper::DomainMapper::sprmWithProps(), but only for the case when there is still at least one tab stop kept

testcase -- get cell text: xray ThisComponent.TextTables(0).getCellByName("B1").Text

=== 2016-11-08

https://bugs.documentfoundation.org/show_bug.cgi?id=92613 -- no idea how to reproduce this

Raal says 5.0 is bad, 5.1 is good

https://bugs.documentfoundation.org/show_bug.cgi?id=93374 is a duplicate and can reproduce steps using daily-till51.git:
- oldest is bad
- c5625a3e1014766a488ca42e986be5dd3efbf051 is good
- [a8d19eafb9e195a85359dd8cdc5c46c38295caa0] 2015-08-22: source-hash-79fb61efb847405fa47235002b52ee8efad5e339 is bad (good for g-b)
- [2ad98b12d82c4ada5756881f0d6074154976e95c] 2015-10-08: source-hash-2e6feddc53830406fa04b4a0aea49bb8438dc702 is good (bad for g-b)
- [508476d55906e21bc6c15423a8730d9d3a9f6cc8] 2015-09-14: source-hash-41007842ed9bb5d6165792a197769f72dae55a2c is bad (good for g-b)
- [a0c244a6d24022e88db2a8b4db2e06ec62b08b49] 2015-09-26: source-hash-18c196f0190d9920673cdd9a4dbc158f08959cfd is bad (good for g-b)
- [9b3e246c95933293fa60b1e377bf05b0e1c80a6d] 2015-10-02: source-hash-419549b095a1bb95ce23bf3fc8866e6b582e6dde is bad (good for g-b)
- [08a963f5804d7847a6bba2961a15779e8bc06a39] 2015-10-05: source-hash-c9c61e0faab31c753f60361a2909c1e61481ac89 is bad (good for g-b)
- [868763b62a54e99514cbf4a697363bf1e1f9f497] 2015-10-07: source-hash-f830600ece806ec365a4839e79afabe183c5e36d is good (bad for g-b)
- [16676509e5ca93d0acbb20998fa8586870330095] 2015-10-06: source-hash-3e5b53438d7001fde1b4664b8867be3dcfae4b95 is good (bad for g-b)
=> 16676509e5ca93d0acbb20998fa8586870330095 / 2015-10-06: source-hash-3e5b53438d7001fde1b4664b8867be3dcfae4b95 is the first good -> indeed
=> 08a963f5804d7847a6bba2961a15779e8bc06a39 / 2015-10-05: source-hash-c9c61e0faab31c753f60361a2909c1e61481ac89 is the last bad -> indeed
range is c9c61e0faab31c753f60361a2909c1e61481ac89..3e5b53438d7001fde1b4664b8867be3dcfae4b95

fixed by 92fd894ea18672cba4cf961bdc4c0bc98f168102, tdf#94435

// vim: ft=asciidoc
