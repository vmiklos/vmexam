= LO clang notes

Detect unprefixed members in a whole module:

----
make -sr -j8 COMPILER_EXTERNAL_TOOL=1 CCACHE_PREFIX=find-unprefixed-members-wrapper2 RENAME_ARGS="-class-prefix=Sw" FORCE_COMPILE_ALL=1
----

(The '2' version is the same as the rename wrapper, just s/rename/find-unprefixed-members/.)

Detect unprefixed members for a class:

----
make -sr -j8 COMPILER_EXTERNAL_TOOL=1 CCACHE_PREFIX=find-unprefixed-members-wrapper2 RENAME_ARGS="-class-name=SdrDragView"
make build-nocheck COMPILER_EXTERNAL_TOOL=1 CCACHE_PREFIX=find-unprefixed-members-wrapper2 RENAME_ARGS="-class-name=SdrDragView"
----

Detect unprefixed members in a directory:

----
make -sr COMPILER_EXTERNAL_TOOL=1 CCACHE_PREFIX=find-unprefixed-members-wrapper2 RENAME_ARGS="-path-prefix=$PWD/source/filter/ww8/rtf"
----

Example `rename.csv` for a member function rename:

----
SdrDragStat::GetPointAnz,GetPointCount
----

Rename them:

----
make -sr -j8 COMPILER_EXTERNAL_TOOL=1 CCACHE_PREFIX=rename-wrapper RENAME_ARGS="-csv=$HOME/rename.csv"
make build-nocheck COMPILER_EXTERNAL_TOOL=1 CCACHE_PREFIX=rename-wrapper RENAME_ARGS="-csv=$HOME/rename.csv"
----

Put output into git:

----
for i in $(find . -name "*.new-rename"); do mv -f $i ${i%%.new-rename}; done
----

== online.git commands

Detect:

----
make -j8 CCACHE_PREFIX=find-unprefixed-members-wrapper2 CCACHE_DISABLE=1 RENAME_ARGS="-poco -class-excluded-prefix=std::,Poco::"
----

Rename:

----
make -j8 CCACHE_PREFIX=rename-wrapper CCACHE_DISABLE=1 RENAME_ARGS="-csv=$HOME/rename.csv"
----

Generate compile_commands.json for clang-rename:

----
bear make -j8 CCACHE_DISABLE=1
----

== clang-tidy

Online:

----
for i in *.cpp; do clang-tidy $i; done
for in in *.cpp; do clang-tidy -checks=*performance* $i; done
----

// vim: ft=asciidoc
