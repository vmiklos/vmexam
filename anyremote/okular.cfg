%
% anyremote configuration file for okular (http://okular.kde.org) management (Server-mode)
%

% STATUS stable
% XTEST no
% SOUND no
% ENV no
% FBROWSER v.3i
% IPC DBUS

GuiAppName=Okular
GuiAppBinary=okular
GuiAppRun=echo 'A=`ps -ef|grep okular|grep -v grep|grep -v edit`; if [ "x$A" == "x" ]; then echo NOK; else echo OK; fi'|bash -f -s
GuiAppIcon=okular.png
GuiAppType=Application
GuiAppProtocols=Server
GuiAppDesc=Okular is a universal document viewer for KDE4

[Protocol]=Server

(Init)=\
	Include($(CfgDir)/Utils/aliases-server.cfg);\
        Include($(CfgDir)/Utils/aliases-server-fbrowser-v3i.cfg);\
	Make(var,from_utf,by_value,);\
	Make(var, to_utf,by_value,);

(Connect)=Make(mode,okular);

[Mode]=okular

(EnterMode)=\
	Set(skin,default);\
	Set(icons,Okular,1,folder,2,up,3,none,4,left,5,fullscreen,6,right,7,none,8,down,9,none,*,question,0,none,#,no);\
	Set(font,small);\
	Set(title, );\
	Set(status, Okular);\
	Macro(OKULAR_MENU);

OKULAR_MENU=Set(menu,replace,);Macro(ALLIN1MENU)

Back      =Set(text,close);Macro(OKULAR_MENU);
Back($$)  =Set(list,close);Macro(OKULAR_MENU);
UpdateMenu=Set(menu,replace,GoTo,Open,Go Home);

GoTo($$)   =Macro(FBROWSER_IC_GO_TO);
Go Home($$)=Macro(FBROWSER_IC_GO_HOME);
Open($$)=Set(list,close);\
	ExecAndSet(title,echo "$(Param)"$(from_utf));\
	Set(menu,clear);\
	Macro(GETPID);\
	Exec(echo 'if [ "x$(okular_pid)" == "x" ]; then cd "`cat $HOME/.anyRemote/ar_storedir.tmp`";okular "`echo $(Param)$(from_utf)`"& fi 2> /dev/null'|bash -f -s);\
	Macro(ALLIN1MENU);
	
%Push($$) use from aliases-server-fbrowser-v3i.cfg

Cancel=Macro(QUIT);\
	Exit

GETPID=Make(var,okular_pid,pgrep -u `whoami` okular);

QUIT=Macro(GETPID);\
	Exec(echo 'if [ "x$(okular_pid)" != "x" ]; then dbus-send --type=method_call --dest=org.kde.okular-$(okular_pid) /MainApplication org.kde.KApplication.quit; fi'|bash -f -s);\

1=Macro(QUIT);\
	Macro(FBROWSER_IC_FILL_LIST);\
	Macro(UpdateMenu);

2=Macro(GETPID);\
	Exec(echo 'if [ "x$(okular_pid)" != "x" ]; then dbus-send --type=method_call --dest=org.kde.okular-$(okular_pid) /okular org.kde.okular.slotGotoFirst; fi'|bash -f -s)

3=Make(none)

4=Macro(GETPID);\
	Exec(echo 'if [ "x$(okular_pid)" != "x" ]; then dbus-send --type=method_call --dest=org.kde.okular-$(okular_pid) /okular org.kde.okular.slotPreviousPage; fi'|bash -f -s)

VOL+=Macro(GETPID);\
	Exec(echo 'if [ "x$(okular_pid)" != "x" ]; then dbus-send --type=method_call --dest=org.kde.okular-$(okular_pid) /okular org.kde.okular.slotPreviousPage; fi'|bash -f -s)

5=Macro(GETPID);\
	Exec(echo 'if [ "x$(okular_pid)" != "x" ]; then dbus-send --type=method_call --dest=org.kde.okular-$(okular_pid) /okular org.kde.okular.slotTogglePresentation; fi'|bash -f -s)

6=Macro(GETPID);\
	Exec(echo 'if [ "x$(okular_pid)" != "x" ]; then dbus-send --type=method_call --dest=org.kde.okular-$(okular_pid) /okular org.kde.okular.slotNextPage; fi'|bash -f -s)

VOL-=Macro(GETPID);\
	Exec(echo 'if [ "x$(okular_pid)" != "x" ]; then dbus-send --type=method_call --dest=org.kde.okular-$(okular_pid) /okular org.kde.okular.slotNextPage; fi'|bash -f -s)

7=Make(none)

8=Macro(GETPID);\
	Exec(echo 'if [ "x$(okular_pid)" != "x" ]; then dbus-send --type=method_call --dest=org.kde.okular-$(okular_pid) /okular org.kde.okular.slotGotoLast; fi'|bash -f -s)

9=Make(none)

* *=Set(text,replace,Help, 1 Choose file\n 2 First page\n 4 Previous page\n 5 Fullscreen\n 6 Next page\n 8 Last page\n ** Help\n # Quit\n);

0=Make(none)

#=Macro(QUIT);\
	Set(title, );

[ModeEnd]

[End]
