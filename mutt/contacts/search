#!/usr/bin/env python3
#
# Copyright 2019 Miklos Vajna
#
# SPDX-License-Identifier: MIT
#

import glob
import json
import os
import sys


class Match(object):
    def __init__(self, name, email):
        self.name = name
        self.email = email

    def __eq__(self, other):
        # Intentionally ignore name here.
        return self.email == other.email

    def __lt__(self, other):
        # Intentionally ignore name here.
        return self.email < other.email

    def __hash__(self):
        # Intentionally ignore name here.
        return hash(self.email)


def select(jsonPath, arg):
    def match(pattern, name, email):
        if email:
            pattern = pattern.lower()
            name = name.lower()
            email = email.lower()

            if pattern in name:
                return True
            elif pattern in email:
                return True

        return False

    patternString = arg
    if not os.path.exists(jsonPath):
        return
    with open(jsonPath) as stream:
        contacts = json.load(stream)
    matches = []
    for person in contacts:
        name = None
        names = person.get("names", [])
        if names:
            name = names[0].get("displayName")

        email = None
        emails = person.get("emailAddresses", [])
        if emails:
            email = emails[0].get("value")

        if name and email:
            if match(patternString, name, email):
                matches.append(Match(name, email))
    matches = sorted(set(matches))
    for i in matches:
        lineString = '"%s" <%s>' % (i.name, i.email)
        print(lineString)


def main(arg):
    if "MUTT_ACCOUNT" in os.environ:
        account = os.environ["MUTT_ACCOUNT"]
        jsonPath = os.path.expanduser("~/.mutt/contacts/%s.json" % account)
        if os.path.exists(jsonPath):
            select(jsonPath, arg)
            return

    # The directory is expected to have multiple JSON files as data sources.
    configPath = os.path.expanduser("~/.mutt/contacts")
    for jsonPath in glob.glob(os.path.join(configPath, "*.json")):
        select(jsonPath, arg)


if __name__ == "__main__":
    main(sys.argv[1])

# vim:set shiftwidth=4 softtabstop=4 expandtab:
