#!/usr/bin/env python
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
#

import gdata
import gdata.contacts.client
import oauth2client
import oauth2client.file
import os
import sys


class GContacts(object):
    def __init__(self):
        configPath = os.path.expanduser("~/.gcontacts")
        self.clientSecretsPath = os.path.join(configPath, "client_secrets.json")
        self.contactsXmlPath = os.path.join(configPath, "contacts.xml")
        self.oauth2ClientJsonPath = os.path.join(configPath, "oauth2client.json")

    def updateCredentials(self):
        auth_uri = self.flow.step1_get_authorize_url()
        print("URL: " + auth_uri)
        auth_code = raw_input("Code: ")
        credential = self.flow.step2_exchange(auth_code)
        self.storage.locked_put(credential)
        self.updateToken()

    def updateToken(self):
        self.oauth2Token = gdata.gauth.OAuth2Token(self.flow.client_id, self.flow.client_secret, self.flow.scope, self.flow.user_agent, self.flow.auth_uri, self.flow.token_uri,
                                                   self.storage.get().access_token, self.storage.get().refresh_token, self.flow.revoke_uri)

    def update(self):
        scopeList = ["https://www.google.com/m8/feeds", "https://www.googleapis.com/auth/contacts"]
        try:
            self.flow = oauth2client.client.flow_from_clientsecrets(self.clientSecretsPath, scopeList, redirect_uri="urn:ietf:wg:oauth:2.0:oob")
        except oauth2client.clientsecrets.InvalidClientSecretsError:
            print("~/.gcontacts/client_secrets.json is missing, get a client ID from <https://console.developers.google.com/project/_/apiui/credential>.")
            sys.exit(1)
        self.flow.user_agent = self.__class__.__name__

        self.storage = oauth2client.file.Storage(self.oauth2ClientJsonPath)
        if self.storage.get() is None or self.storage.get().invalid:
            self.updateCredentials()
        self.updateToken()
        contactsClient = gdata.contacts.client.ContactsClient(auth_token=self.oauth2Token, source=self.__class__.__name__)

        while True:
            try:
                contacts = contactsClient.GetContacts()
                break
            except gdata.client.Unauthorized:
                self.updateCredentials()

        singlePage = False  # For debugging purposes.
        count = 0
        sock = open(self.contactsXmlPath, "w")
        while contacts is not None:
            if count == 0:
                lines = contacts.ToString().split('\n')
                sock.write("""<?xml version="1.0" encoding="UTF-8"?>\n""")
                sock.write(lines[0] + "\n")
                footer = lines[-1]
            print("Downloading feed #" + str(count) + "...")
            count += 1
            for contact in contacts.entry:
                if contact.name:
                    sock.write(contact.ToString() + "\n")
            nextLink = contacts.GetNextLink()
            if nextLink and not singlePage:
                contacts = contactsClient.GetContacts(uri=nextLink.href)
            else:
                contacts = None
            if contacts is None:
                sock.write("""</ns0:feed>\n""")
        sock.close()

contacts = GContacts()
contacts.update()

# vim:set shiftwidth=4 softtabstop=4 expandtab:
