#!/usr/bin/env python3

import json
import urllib.request, urllib.parse, urllib.error
import os
import sys


def system(cmd):
    os.system("%s 2>&1 |tee -a mirror.log" % cmd)


search = len(sys.argv) > 1 and sys.argv[1] == "--search"
os.chdir(os.path.dirname(__file__))
api_url = 'https://api.github.com/users/%s/repos' % os.environ['USER']
repos = []
while True:
    with urllib.request.urlopen(api_url) as response:
        repos += json.loads(response.read().decode('utf-8'))
    next_url = ''
    if 'Link' in response.headers:
        for link in response.headers['Link'].split(', '):
            tokens = link.split('; ')
            if 'rel="next"' in tokens:
                next_url = tokens[0].strip('<>')
                break
    if not next_url:
        break
    api_url = next_url

for i in repos:
    if search:
        if i["archived"] or i["fork"]:
            continue
        print(i["name"])
        continue

    if os.path.exists("%s.git" % i['name']):
        # Update existing repo
        os.chdir("%s.git" % i['name'])
        system("git fetch -q origin && git remote prune origin")
        os.chdir("..")
    else:
        # Mirror new repo
        system("git clone --mirror %s" % i['clone_url'])

# vim:set shiftwidth=4 softtabstop=4 expandtab:
