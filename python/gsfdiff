#!/usr/bin/env python3
#
# Copyright 2020 Miklos Vajna. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.
#
# Diffs the streams of an archive handled by 'gsf', e.g. OLE2.
#

import os
import re
import subprocess
import sys

def parse_gsf(path):
    ret = {}
    process = subprocess.run(["gsf", "list", path], stdout=subprocess.PIPE)
    gsf_output = process.stdout
    for line in gsf_output.split(b"\n"):
        match = re.match(b"([^ ]+) + ([^ ]+) +([^ ]+)", line)
        if not match:
            # First line is a header.
            continue
        stream_type = match.group(1)
        stream_length = match.group(2)
        stream_name = match.group(3)
        process = subprocess.run(["gsf", "cat", path, stream_name], stdout=subprocess.PIPE)
        stream_content = process.stdout
        ret[stream_name] = (stream_type, stream_length, stream_content)
    return ret


def gsfdiff(file1_path, file2_path):
    file1 = parse_gsf(file1_path)
    file2 = parse_gsf(file2_path)
    stream_names = list(file1.keys()) + list(file2.keys())
    for stream_name in sorted(set(stream_names)):
        if stream_name not in file1.keys():
            print("Stream {} is missing from {}.".format(stream_name, file1_path))
            continue

        if stream_name not in file2.keys():
            print("Stream {} is missing from {}.".format(stream_name, file2_path))
            continue

        length1 = file1[stream_name][1].decode("utf-8")
        length2 = file2[stream_name][1].decode("utf-8")
        if length1 != length2:
            print("Stream {} length is {} in {}, but {} in {}.".format(stream_name, length1, file1_path, length2, file2_path))
            continue

        content1 = file1[stream_name][2]
        content2 = file2[stream_name][2]
        if content1 != content2:
            print("Stream {} content in {} and in {} doesn't match.".format(stream_name, file1_path, file2_path))


if len(sys.argv) > 2:
    gsfdiff(sys.argv[1], sys.argv[2])
else:
    print("usage: gsfdiff file1 file2")

# vim:set shiftwidth=4 softtabstop=4 expandtab:
