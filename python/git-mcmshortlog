#!/usr/bin/env python3
#
# Copyright 2018 Miklos Vajna. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import json
import os
import re
import sys


# Searches for a string (e.g. name or email) in the MCM db.
def searchInMcm(query):
    pwd = os.getcwd()
    os.chdir(os.path.join(os.environ['HOME'], ".mcm/db"))
    ret = os.system("git grep -q '%s'" % query)
    os.chdir(pwd)
    return ret == 0


# Filters git shortlog about, hiding already existing TDF members.
def main(argv):
    git = True
    if len(argv) and argv[0] == "--qa":
        git = False
    config = json.load(open("git-mcmshortlog.json"))
    ignoreNames = [n["name"] for n in config["ignoreNames"]]
    emailMap = config["emailMap"]
    if git:
        sock = os.popen("git shortlog -s -n -e --since=6.months.ago")
    else:
        sock = open("qa.csv")
    while True:
        line = sock.readline().strip()
        if git:
            if not ('\t' in line):
                continue
            commits, nameEmail = line.split('\t')
            if int(commits) < 10:
                # Less then 10 recent commits -> assume it's the not interesting
                # long tail.
                break
            name = re.sub(r'(.*) <(.*)>', r'\1', nameEmail)
            email = re.sub(r'(.*) <(.*)>', r'\2', nameEmail)
        else:
            if not line:
                break
            name, email = line.split(", ")

        if name in ignoreNames:
            continue

        if email in emailMap.keys():
            email = emailMap[email]
        if searchInMcm(email):
            # Found by email.
            continue

        if searchInMcm(name):
            # Found by name.
            continue

        print(line)
    sock.close()

if __name__ == "__main__":
    main(sys.argv[1:])

# vim:set shiftwidth=4 softtabstop=4 expandtab:
